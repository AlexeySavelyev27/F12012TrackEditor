<Window x:Class="PSSGEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="PromixFlame PSSG Editor" Height="600" Width="900">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Main menu with bottom border -->
        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,1">
            <Menu>
                <MenuItem Header="_File">
                    <MenuItem x:Name="OpenMenuItem" Header="_Open" Click="OpenMenuItem_Click"/>
                    <MenuItem x:Name="SaveAsMenuItem" Header="Save _As" Click="SaveAsMenuItem_Click"/>
                    <Separator/>
                    <MenuItem Header="E_xit" Click="ExitMenuItem_Click"/>
                </MenuItem>
            </Menu>
        </Border>

        <!-- Status bar with top border -->
        <Border Grid.Row="2" BorderBrush="Black" BorderThickness="0,1,0,0">
            <StatusBar>
                <StatusBarItem>
                    <TextBlock x:Name="StatusText" Text="Ready" />
                </StatusBarItem>
            </StatusBar>
        </Border>

        <!-- Content area: TreeView on the left, DataGrid on the right -->
        <Grid x:Name="ContentGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!-- Left TreeView without border -->
            <TreeView Grid.Column="0"
                      x:Name="PssgTreeView"
                      SelectedItemChanged="PssgTreeView_SelectedItemChanged"
                      Background="White"
                      BorderThickness="0"
                      BorderBrush="Transparent"
                      Padding="2" />

            <!-- Vertical splitter -->
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Width="5"
                          Background="LightGray"
                          ShowsPreview="True" />

            <!-- Right panel: DataGrid inside a ScrollViewer, no outer border -->
            <ScrollViewer Grid.Column="2"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled">
                <DataGrid x:Name="AttributesDataGrid"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          IsReadOnly="False"
                          HeadersVisibility="Column"
                          RowHeaderWidth="0"
                          SelectionUnit="Cell"
                          PreviewMouseLeftButtonDown="AttributesDataGrid_PreviewMouseLeftButtonDown"
                          PreviewKeyDown="AttributesDataGrid_PreviewKeyDown"
                          PreparingCellForEdit="AttributesDataGrid_PreparingCellForEdit"
                          Sorting="AttributesDataGrid_Sorting"
                          Background="Gray"
                          BorderThickness="0"
                          BorderBrush="Transparent"
                          FocusVisualStyle="{x:Null}"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                    <!--
                        Common DataGridCell style:
                        - Remove focus rectangle
                        - Remove cell border
                        - Prevent blue highlighting when editing
                        - Handle double-click on cell
                    -->
                    <DataGrid.Resources>
                        <Style TargetType="DataGridCell">
                            <!-- Remove focus rectangle -->
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <!-- Remove cell border -->
                            <Setter Property="BorderThickness" Value="0" />
                            <!-- Handle MouseDoubleClick event -->
                            <EventSetter Event="MouseDoubleClick"
                                         Handler="AttributesDataGrid_CellMouseDoubleClick" />

                            <Style.Triggers>
                                <!-- When cell is in edit mode AND is selected, force white background -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditing" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="Black" />
                                </MultiTrigger>

                                <!-- If cell is editing (regardless of selection), ensure white background -->
                                <Trigger Property="IsEditing" Value="True">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>

                                <!-- Normal selected state (not editing) -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!-- "Attribute" column: read-only, gray background, blue selection -->
                        <DataGridTextColumn Header="Attribute"
                                            Binding="{Binding Key}"
                                            SortMemberPath="Key"
                                            IsReadOnly="True"
                                            Width="Auto">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="#F0F0F0" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Padding" Value="5" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background"
                                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <!-- "Value" column: editable, wrapping text -->
                        <DataGridTextColumn Header="Value"
                                            Binding="{Binding Value}"
                                            SortMemberPath="Value"
                                            Width="3*">
                            <!-- Display style (read-only view) -->
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Padding" Value="2,0,0,0"/>
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <!-- Editing style: remove border, transparent background, no focus rectangle -->
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="AcceptsReturn" Value="True" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                </DataGrid>
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>