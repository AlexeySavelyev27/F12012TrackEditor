<Window x:Class="PSSGEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="PromixFlame PSSG Editor" Height="600" Width="900">
    <DockPanel>
        <!-- Menu с нижним разделителем -->
        <Border DockPanel.Dock="Top" BorderBrush="Black" BorderThickness="0,0,0,1">
            <Menu>
                <MenuItem Header="_File">
                    <MenuItem x:Name="OpenMenuItem" Header="_Open" Click="OpenMenuItem_Click"/>
                    <MenuItem x:Name="SaveAsMenuItem" Header="Save _As" Click="SaveAsMenuItem_Click"/>
                    <Separator/>
                    <MenuItem Header="E_xit" Click="ExitMenuItem_Click"/>
                </MenuItem>
            </Menu>
        </Border>

        <!-- Строка статуса с верхним разделителем -->
        <Border DockPanel.Dock="Bottom" BorderBrush="Black" BorderThickness="0,1,0,0">
            <StatusBar>
                <StatusBarItem x:Name="StatusBar">
                    <TextBlock x:Name="StatusText" Text="Ready" />
                </StatusBarItem>
            </StatusBar>
        </Border>

        <!-- Основная область: две панели без каких-либо внешних рамок -->
        <Grid x:Name="MainGrid"
              Background="Gray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!-- Левый TreeView без обводки -->
            <TreeView Grid.Column="0"
                      x:Name="PssgTreeView"
                      SelectedItemChanged="PssgTreeView_SelectedItemChanged"
                      Background="White"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      ScrollViewer.CanContentScroll="True"
                      BorderThickness="0"
                      BorderBrush="Transparent"
                      Padding="2" />

            <!-- Вертикальный сплиттер -->
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Width="5"
                          Background="LightGray"
                          ShowsPreview="True" />

            <!-- Правая панель: DataGrid без обводки -->
            <DataGrid Grid.Column="2"
                      x:Name="AttributesDataGrid"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      IsReadOnly="False"
                      HeadersVisibility="Column"
                      RowHeaderWidth="0"
                      SelectionUnit="Cell"
                      PreviewMouseLeftButtonDown="AttributesDataGrid_PreviewMouseLeftButtonDown"
                      PreviewKeyDown="AttributesDataGrid_PreviewKeyDown"
                      Sorting="AttributesDataGrid_Sorting"
                      Background="Gray"
                      BorderThickness="0"
                      BorderBrush="Transparent"
                      Visibility="Collapsed">
                <DataGrid.Columns>
                    <!-- Столбец «Attribute» с серым фоном и синим выделением -->
                    <DataGridTextColumn Header="Attribute"
                                        Binding="{Binding Key}"
                                        SortMemberPath="Key"
                                        IsReadOnly="True"
                                        Width="Auto">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="#EEEEEE" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <!-- Столбец «Value» -->
                    <DataGridTextColumn Header="Value"
                                        Binding="{Binding Value}"
                                        SortMemberPath="Value"
                                        Width="3*" />
                </DataGrid.Columns>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <EventSetter Event="MouseDoubleClick"
                                     Handler="AttributesDataGrid_CellMouseDoubleClick" />
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
            <!-- Панель Raw Data -->
            <Grid Grid.Column="2"
                      x:Name="RawDataPanel"
                      Visibility="Collapsed"
                      Background="#ececec"
                      Panel.ZIndex="1">
                   <Grid.RowDefinitions>
                   <!-- Заголовок «Raw Data» (обязательно Auto, чтобы он не «тянулся») -->
                          <RowDefinition Height="Auto" />
                   <!-- Текстовое поле: займёт всё свободное пространство до StatusBar -->
                          <RowDefinition Height="*" />
                   </Grid.RowDefinitions>

                   <!-- 2.1. Заголовок -->
                   <TextBlock Text="Raw Data"
                                   FontWeight="Bold"
                                   Margin="6,5,5,5"
                                   Grid.Row="0" />      
                <!-- 2.2. Сам TextBox, который растянется до самого низу (StatusBar) с нижним Margin=5 -->
                <TextBox x:Name="RawDataTextBox"
                           Grid.Row="1"
                           AcceptsReturn="True"
                           VerticalScrollBarVisibility="Auto"
                           HorizontalScrollBarVisibility="Auto"
                           TextWrapping="Wrap"
                           Margin="5,0,5,5"
                           Background="White"
                           BorderBrush="DarkGray"
                           BorderThickness="1">
                </TextBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
